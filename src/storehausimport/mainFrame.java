package storehausimport;

import java.io.IOException;
import java.util.logging.FileHandler;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.logging.SimpleFormatter;
import javax.swing.JFileChooser;
import static javax.swing.JFileChooser.OPEN_DIALOG;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.xml.parsers.ParserConfigurationException;
import org.xml.sax.SAXException;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author Kaspars
 */
public class mainFrame extends javax.swing.JFrame {
    
    static Logger logger = Logger.getLogger("SHImportLoger");
    static FileHandler fh;  
    JFileChooser chooser = new JFileChooser();
    public String xmlFileWithFullPath;

        
    /**
     * Creates new form mainFrame
     */
    public mainFrame() {
        initComponents();
           
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileRecordsInfoLabel = new javax.swing.JLabel();
        choseFileButton = new javax.swing.JButton();
        xmlFilePathLabel = new javax.swing.JLabel();
        selectedXmlFileLabel = new javax.swing.JTextField();
        importDataButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        fileRecordsInfoPanel = new javax.swing.JTextPane();
        jToggleButton1 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(779, 472));
        setName("mainFrame"); // NOI18N

        fileRecordsInfoLabel.setText("Informācija par ierakstiem failā:");
        fileRecordsInfoLabel.setEnabled(false);

        choseFileButton.setText("Izvēlēties failu");
        choseFileButton.setToolTipText("Izvēlieties failu, kurā galbājas no StoreHaus eksportētie faili.");
        choseFileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                choseFileButtonActionPerformed(evt);
            }
        });

        xmlFilePathLabel.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        xmlFilePathLabel.setText("Izvēlētais fails:");
        xmlFilePathLabel.setEnabled(false);
        xmlFilePathLabel.setName("xmlfilePathLabel"); // NOI18N

        selectedXmlFileLabel.setEditable(false);
        selectedXmlFileLabel.setEnabled(false);
        selectedXmlFileLabel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectedXmlFileLabelActionPerformed(evt);
            }
        });

        importDataButton.setText("Importēt");
        importDataButton.setToolTipText("Importēt failu grāmatvedības sistēmā");
        importDataButton.setEnabled(false);

        fileRecordsInfoPanel.setEditable(false);
        fileRecordsInfoPanel.setEnabled(false);
        jScrollPane1.setViewportView(fileRecordsInfoPanel);

        jToggleButton1.setText("Beigt darbu");
        jToggleButton1.setToolTipText("Begt darbu aizvērt aplikāciju");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(choseFileButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(xmlFilePathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(importDataButton, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(fileRecordsInfoLabel)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(selectedXmlFileLabel)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 471, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jToggleButton1)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(105, 105, 105)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(xmlFilePathLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectedXmlFileLabel)
                    .addComponent(choseFileButton))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(fileRecordsInfoLabel)
                        .addComponent(importDataButton))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(272, 272, 272)
                .addComponent(jToggleButton1)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void choseFileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_choseFileButtonActionPerformed
        // TODO add your handling code here:

        FileNameExtensionFilter filter = new FileNameExtensionFilter("xml - StoreHaus fails", "xml");
        chooser.setFileFilter(filter);
        chooser.setApproveButtonText("Importēt failu");
        chooser.setApproveButtonMnemonic('a');
        chooser.setDialogTitle("Izvēlaties failu, kuru importēsies!");
        chooser.setDialogType(OPEN_DIALOG);
        chooser.setApproveButtonToolTipText("Apstipriniet iezīmētā faila importēšanu grāmatvedības sistēmā!");
        int returnVal = chooser.showOpenDialog(mainFrame.this);
        if(returnVal == JFileChooser.APPROVE_OPTION) {
           xmlFileWithFullPath=chooser.getSelectedFile().toString();
           mainFrame.this.selectedXmlFileLabel.setText(xmlFileWithFullPath);
           this.xmlFilePathLabel.setEnabled(!xmlFileWithFullPath.isEmpty());
           this.selectedXmlFileLabel.setEnabled(!xmlFileWithFullPath.isEmpty());
           try {
                StoreHausFile sht =new StoreHausFile(xmlFileWithFullPath);
                String fileRecordsInfo="";
                this.fileRecordsInfoPanel.setText(fileRecordsInfo);
                this.importDataButton.setEnabled(!fileRecordsInfo.isEmpty());
                this.fileRecordsInfoLabel.setEnabled(!fileRecordsInfo.isEmpty());
                fileRecordsInfo=sht.getFileInfo();
                this.fileRecordsInfoPanel.setText(fileRecordsInfo);
                this.fileRecordsInfoPanel.setEnabled(!fileRecordsInfo.isEmpty());
                this.importDataButton.setEnabled(!fileRecordsInfo.isEmpty());
                this.fileRecordsInfoLabel.setEnabled(!fileRecordsInfo.isEmpty());


            } catch (ParserConfigurationException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.FINER, null, ex);
                JOptionPane.showMessageDialog(null,ex.getMessage());
                logger.info(ex.getMessage()+" "+selectedXmlFileLabel);
            } catch (SAXException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.FINER, null, ex);
                JOptionPane.showMessageDialog(null,"Kļūda faila "+xmlFileWithFullPath+" struktūrā!"+"\n"+ex.getMessage());
                logger.info(ex.getMessage()+" "+selectedXmlFileLabel);
            } catch (IOException ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.FINER, null, ex);
                JOptionPane.showMessageDialog(null,"Kļūda faila "+xmlFileWithFullPath+" nolasīšanā! "+"\n"+ex.getMessage());
                logger.info(ex.getMessage()+" "+selectedXmlFileLabel);
            } catch (Exception ex) {
                Logger.getLogger(mainFrame.class.getName()).log(Level.FINER, null, ex);
                logger.info(ex.getMessage()+" "+selectedXmlFileLabel);
                JOptionPane.showMessageDialog(null,"Kļūda! Fails "+xmlFileWithFullPath+" neatbilst noteiktai StoreHaus struktūrai! "+"\n"+ex.getMessage());
            }
           

            
        }
    }//GEN-LAST:event_choseFileButtonActionPerformed

    private void selectedXmlFileLabelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectedXmlFileLabelActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_selectedXmlFileLabelActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(mainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                try {                   
                    fh = new FileHandler("SHImporter.log");  
                     logger.addHandler(fh);
                    SimpleFormatter formatter = new SimpleFormatter();  
                    
                    fh.setFormatter(formatter);  
                    //logger.info("My first log");  
                    
                    new mainFrame().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                } catch (SecurityException ex) {
                    Logger.getLogger(mainFrame.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton choseFileButton;
    private javax.swing.JLabel fileRecordsInfoLabel;
    private javax.swing.JTextPane fileRecordsInfoPanel;
    private javax.swing.JButton importDataButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField selectedXmlFileLabel;
    private javax.swing.JLabel xmlFilePathLabel;
    // End of variables declaration//GEN-END:variables
}
