/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package storehausimport;

import entity.Firmas;
import java.awt.event.KeyEvent;
import java.util.Map;
import javax.persistence.EntityManager;
import javax.persistence.PersistenceException;
import javax.swing.JOptionPane;
import javax.swing.JTextField;

/**
 *
 * @author Kaspars
 */
public class CompanieForImport extends javax.swing.JFrame {

    /**
     * Creates new form CompanieForImport
     */
    public EntityManager selectedCompanyForImportEntityManager=null;
    private Object result;

    public void setSelectedCompanyForImportEntityManager(EntityManager selectedCompanyForImportEntityManager) {
        this.selectedCompanyForImportEntityManager = selectedCompanyForImportEntityManager;
    }




    
    public entity.Firmas companieForImport=null;
    public CompanieForImport() {
        initComponents();
    }
    public javax.swing.JTextField jtextSelectedCompany = null;

    public void setJtextSelectedCompany(JTextField jtextSelectedCompany) {
        this.jtextSelectedCompany = jtextSelectedCompany;
    }

      
    public void setcompanieForImport(Firmas companieForImport) {
        this.companieForImport = companieForImport;
    }

    public Firmas getcompanieForImport() {
        return companieForImport;
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        storeHausImportPUEntityManager = java.beans.Beans.isDesignTime() ? null : javax.persistence.Persistence.createEntityManagerFactory("storeHausImportPU").createEntityManager();
        firmasQuery = java.beans.Beans.isDesignTime() ? null : storeHausImportPUEntityManager.createQuery("SELECT f FROM Firmas f order by f.nosaukums");
        firmasList = java.beans.Beans.isDesignTime() ? java.util.Collections.emptyList() : firmasQuery.getResultList();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableListOfCompany = new javax.swing.JTable(){;
            private static final long serialVersionUID = 1L;
            public boolean isCellEditable(int row, int column) {
                return false;
            };
        };
        buttonClose = new javax.swing.JButton();
        buttonAcept = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Izvēlieties firmu, kurā importēsiet dokumentus");
        setName("frameListOfCompanie"); // NOI18N
        setResizable(false);
        addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formFocusLost(evt);
            }
        });

        jTableListOfCompany.setColumnSelectionAllowed(true);
        jTableListOfCompany.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jTableListOfCompany.getTableHeader().setReorderingAllowed(false);

        org.jdesktop.swingbinding.JTableBinding jTableBinding = org.jdesktop.swingbinding.SwingBindings.createJTableBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, firmasList, jTableListOfCompany, "JtableListOfCompany");
        org.jdesktop.swingbinding.JTableBinding.ColumnBinding columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${nosaukums}"));
        columnBinding.setColumnName("Nosaukums");
        columnBinding.setColumnClass(String.class);
        columnBinding = jTableBinding.addColumnBinding(org.jdesktop.beansbinding.ELProperty.create("${paskaidroj}"));
        columnBinding.setColumnName("Paskaidrojums");
        columnBinding.setColumnClass(String.class);
        bindingGroup.addBinding(jTableBinding);
        jTableBinding.bind();
        jTableListOfCompany.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jTableListOfCompanyMouseMoved(evt);
            }
        });
        jTableListOfCompany.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTableListOfCompanyMouseClicked(evt);
            }
        });
        jTableListOfCompany.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTableListOfCompanyKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTableListOfCompany);
        jTableListOfCompany.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        buttonClose.setText("Aizvērt");
        buttonClose.setToolTipText("Aizvērt logu, atlikt darbību");
        buttonClose.setPreferredSize(new java.awt.Dimension(85, 23));
        buttonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCloseActionPerformed(evt);
            }
        });

        buttonAcept.setText("Apstiprināt");
        buttonAcept.setMaximumSize(new java.awt.Dimension(67, 23));
        buttonAcept.setMinimumSize(new java.awt.Dimension(67, 23));
        buttonAcept.setPreferredSize(new java.awt.Dimension(67, 23));
        buttonAcept.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAceptActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonAcept, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(buttonClose, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 380, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonAcept, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(buttonClose, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCloseActionPerformed
        // TODO add your handling code here:
        
        this.dispose();
    }//GEN-LAST:event_buttonCloseActionPerformed

    private void jTableListOfCompanyKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTableListOfCompanyKeyPressed
        // TODO add your handling code here: 
        if (evt.getKeyCode () == KeyEvent.VK_ESCAPE) {
            this.dispose();
        }
        
    }//GEN-LAST:event_jTableListOfCompanyKeyPressed

    private void buttonAceptActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAceptActionPerformed
        // TODO add your handling code here:
        this.aceptCompanyChoose();        
    }//GEN-LAST:event_buttonAceptActionPerformed

    private void jTableListOfCompanyMouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListOfCompanyMouseMoved
        // TODO add your handling code here:
    }//GEN-LAST:event_jTableListOfCompanyMouseMoved

    private void formFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formFocusLost
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_formFocusLost

    private void jTableListOfCompanyMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTableListOfCompanyMouseClicked
        // TODO add your handling code here:
        this.aceptCompanyChoose();
    }//GEN-LAST:event_jTableListOfCompanyMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CompanieForImport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CompanieForImport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CompanieForImport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CompanieForImport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            
            public void run() {
                
                new CompanieForImport().setVisible(true);
                
            }
        });
    }
    
    private void aceptCompanyChoose(){
     int[] selected = jTableListOfCompany.getSelectedRows();
        if (selected.length>1){
            JOptionPane.showMessageDialog(null,"Izvēlieties tikai vienu firmu, kurā importēsiet dokumentus!");
            return;
        }
        entity.Firmas companieForImport =  firmasList.get(jTableListOfCompany.convertRowIndexToModel(selected[0]));
        
        //selectedCompanyForImportEntityManager=javax.persistence.Persistence.createEntityManagerFactory("storeHausImportPU").createEntityManager();
        if (this.jtextSelectedCompany!=null && selectedCompanyForImportEntityManager!=null){
            selectedCompanyForImportEntityManager.setProperty("javax.persistence.jdbc.url", 
                    "jdbc:postgresql://localhost:5432/"+companieForImport.getFirma());
            try {
                selectedCompanyForImportEntityManager.getTransaction().begin();
                try {
                               
                result=selectedCompanyForImportEntityManager.createNativeQuery("SELECT * FROM Konti where konts='1'").getSingleResult();
                                } catch (Exception  ex)  {
                    JOptionPane.showMessageDialog(null,"Datu bāzes pieslēguma pārbaude nav izdevusies!\n"+companieForImport.getNosaukums()+
                    " datu bāze ("+companieForImport.getFirma()+")\n"+ex.getMessage());
                }
                selectedCompanyForImportEntityManager.getTransaction().commit();
            } catch (PersistenceException  ex)  {
                JOptionPane.showMessageDialog(null,"Neizdevās pieslēgties pie "+companieForImport.getNosaukums()+
                " datu bāzes ("+companieForImport.getFirma()+")\n"+ex.getMessage());
                 if (selectedCompanyForImportEntityManager.getTransaction().isActive())
                    selectedCompanyForImportEntityManager.getTransaction().rollback();   
                  selectedCompanyForImportEntityManager.close();
                                           
            }
            if (result.equals(null)){
                selectedCompanyForImportEntityManager=null;
            } else{
                jtextSelectedCompany.setText(companieForImport.getNosaukums());
                Map<String,Object> props = selectedCompanyForImportEntityManager.getProperties();                   
            }
 
        }
        
        this.setVisible(false);
    }            
    
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAcept;
    private javax.swing.JButton buttonClose;
    private java.util.List<entity.Firmas> firmasList;
    private javax.persistence.Query firmasQuery;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableListOfCompany;
    public javax.persistence.EntityManager storeHausImportPUEntityManager;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
